# -*- Makefile -*-
### Makefile - VHDL Makefile generated by Simplifide

# Directory : ${FILE_PATH}
# Platform  : ModelSim
# Generated : ${DATE?date} ${AUTHOR}


# Define compilation command and options

MAKE    = nmake
COMPILE_VHDL    = vcom
COMPILE_VERILOG = vlog

OPTIONS = -93 -work ${project.name}


# Define library paths

LIBRARY_work = ${project.name}

base_path   = ${project.suiteLocation}
design_path = $(base_path)/${project.designLocation}
build_path  = $(base_path)/${project.buildLocation}




all : \
		library \
	<#list project.files as file>
		${file.name}<#if file_has_next>\</#if>
	</#list>

clean : \
	rm -f ${project.osBuild}


# Rule for creating library directory

library : ${project.name}

<#list project.required as req>${req.name} :
	$(MAKE) -f ${req.osBase}Makefile
	
</#list>

${project.name} :<#list project.required as req>${req.name} </#list>
	-mkdir ${project.osBuild} 
	vlib $(build_path)/${project.name} 
	vmap ${project.name} $(build_path)/${project.name}
<#list project.required as req>	vmap ${req.name} $(base_path)/${req.buildLocation}/${req.name}
	</#list>


# Rules for compiling single library units and their subhierarchy
 
<#list project.files as file>
${file.name} : \
		library  <#if file.required?size != 0>\</#if>
<#list file.required as require>		${require.name} <#if require_has_next>\</#if>
		</#list>
		<#if file.isVhdl()>$(COMPILE_VHDL)<#else>$(COMPILE_VERILOG)</#if> $(OPTIONS) $(design_path)/${file.name}		
		
</#list>

### Makefile ends here
